{"version":3,"file":"static/js/697.9d0db191.chunk.js","mappings":"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","sources":["features/ErrorMessage/ErrorMessage.js","features/ListItems/CharactersItem/CharactersItem.js","features/Lists/CharactersList/CharactersList.js"],"sourcesContent":["import imgSrc from '../../resources/img/error.gif';\r\n\r\nimport './errorMessage.scss';\r\n\r\nconst ErrorMessage = () => {\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<img src={imgSrc} alt=\"error\" className='error__img' />\r\n\t\t\t<div className=\"error__text\">Something went wrong...</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ErrorMessage;","import { Link } from 'react-router-dom';\r\n\r\nimport './charactersItem.scss';\r\nimport '../../../style/title.scss';\r\n\r\nconst CharactersItem = (props) => {\r\n\tconst { name, image, species, id } = props;\r\n\r\n\treturn (\r\n\t\t<Link to={`/character/${id}`} className=\"characters__item\">\r\n\t\t\t<img src={image} alt={name} className=\"characters__item-img\" />\r\n\t\t\t<div className=\"characters__item-inner\">\r\n\t\t\t\t<h2 className=\"characters__item-title title title_card\">{name}</h2>\r\n\t\t\t\t<div className=\"characters__item-descr subtitle\">{species}</div>\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t);\r\n}\r\n\r\nexport default CharactersItem;","import CharactersItem from '../../ListItems/CharactersItem/CharactersItem';\r\nimport Spinner from '../../Spinner/Spinner';\r\nimport ErrorMessage from '../../ErrorMessage/ErrorMessage';\r\n\r\nimport { useGetCharactersQuery } from '../../../api/apiSlice';\r\nimport {\r\n\tcharactersUpdate,\r\n\tfiltersUpdated,\r\n\tclearCharacters,\r\n\tpageIncreased,\r\n\tclearPage\r\n} from './charactersSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n\r\nimport '../listStyle.scss';\r\nimport '../../../style/button.scss';\r\n\r\nconst CharactersList = () => {\r\n\r\n\tconst page = useSelector(state => state.characters.page);\r\n\tconst characters = useSelector(state => state.characters.characters);\r\n\tconst isFiltersUpdated = useSelector(state => state.characters.filtersUpdated);\r\n\r\n\tconst {\r\n\t\tname,\r\n\t\tspecies,\r\n\t\tgender,\r\n\t\tstatus\r\n\t} = useSelector(state => state.characters.filters);\r\n\r\n\tconst {\r\n\t\tdata = {},\r\n\t\tisLoading,\r\n\t\tisFetching,\r\n\t\tisError\r\n\t} = useGetCharactersQuery(\r\n\t\t{ page, name, species, gender, status }\r\n\t);\r\n\tconst { results = [], info = {} } = data;\r\n\tconst pages = info.pages;\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isFiltersUpdated) {\r\n\t\t\tdispatch(clearCharacters());\r\n\t\t\tdispatch(clearPage(1));\r\n\t\t\tdispatch(filtersUpdated(false));\r\n\t\t}\r\n\t\tif (\t\t\t\t\t// проверяем, есть ли в сторе элемент с таким же id,\r\n\t\t\t!(\t\t\t\t// как в данных, которые приходят с API\r\n\t\t\t\tcharacters.length \r\n\t\t\t\t&& characters[characters.length - 1]?.id === results[results.length - 1]?.id\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tdispatch(charactersUpdate(results));\r\n\t\t}\r\n\t}, [results]);\r\n\r\n\tconst renderCharacters = (chars) => {\r\n\t\treturn chars.map(char => {\r\n\t\t\treturn <CharactersItem\r\n\t\t\t\t\tname={char.name}\r\n\t\t\t\t\timage={char.image}\r\n\t\t\t\t\tspecies={char.species}\r\n\t\t\t\t\tid={char.id}\r\n\t\t\t\t\tkey={char.id}\r\n\t\t\t\t\t/>;\r\n\t\t});\r\n\t}\r\n\r\n\tconst loadMore = () => {\r\n\t\tdispatch(pageIncreased());\r\n\t}\r\n\r\n\tif (isLoading) return <Spinner />;\r\n\tif (isError) return <ErrorMessage />;\r\n\r\n\tconst elements = renderCharacters(characters);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='list list_characters'>\r\n\t\t\t\t{ elements }\r\n\t\t\t</div>\r\n\t\t\t<button className=\"btn\" onClick={loadMore} disabled={isFetching || page >= pages}>LOAD MORE</button>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default CharactersList;"],"names":["_jsxs","_Fragment","children","_jsx","src","imgSrc","alt","className","props","name","image","species","id","Link","to","concat","page","useSelector","state","characters","isFiltersUpdated","filtersUpdated","_useSelector","filters","gender","status","_useGetCharactersQuer","useGetCharactersQuery","_useGetCharactersQuer2","data","isLoading","isFetching","isError","_data$results","results","_data$info","info","pages","dispatch","useDispatch","useEffect","_characters","_results","clearCharacters","clearPage","length","charactersUpdate","Spinner","ErrorMessage","elements","map","char","CharactersItem","onClick","pageIncreased","disabled"],"sourceRoot":""}