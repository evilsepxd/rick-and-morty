{"version":3,"file":"static/js/645.1bf450a6.chunk.js","mappings":"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","sources":["features/ErrorMessage/ErrorMessage.js","features/ListItems/EpisodesItem.js","features/Lists/EpisodesList/EpisodesList.js"],"sourcesContent":["import imgSrc from '../../resources/img/error.gif';\r\n\r\nimport './errorMessage.scss';\r\n\r\nconst ErrorMessage = () => {\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<img src={imgSrc} alt=\"error\" className='error__img' />\r\n\t\t\t<div className=\"error__text\">Something went wrong...</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ErrorMessage;","import { Link } from 'react-router-dom';\r\n\r\nimport './listItem.scss';\r\nimport '../../style/title.scss';\r\n\r\nconst EpisodesItem = (props) => {\r\n\r\n\tconst { name, date, episode, id } = props;\r\n\r\n\treturn (\r\n\t\t<Link to={`/episode/${id}`} className=\"list__item\">\r\n\t\t\t<div className=\"list__item-inner\">\r\n\t\t\t\t<h2 className=\"list__item-title title title_card\">{name}</h2>\r\n\t\t\t\t<div className=\"list__item-descr subtitle\">{date}</div>\r\n\t\t\t\t<div className=\"list__item-number descr\">{episode}</div>\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t);\r\n}\r\n\r\nexport default EpisodesItem;","import EpisodesItem from '../../ListItems/EpisodesItem';\r\nimport Spinner from '../../Spinner/Spinner';\r\nimport ErrorMessage from '../../ErrorMessage/ErrorMessage';\r\n\r\nimport { useGetEpisodesQuery } from '../../../api/apiSlice';\r\nimport {\r\n\tepisodesUpdate,\r\n\tfiltersUpdated,\r\n\tclearEpisodes,\r\n\tpageIncreased,\r\n\tclearPage\r\n} from './episodesSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n\r\nimport '../listStyle.scss';\r\nimport '../../../style/button.scss';\r\n\r\nconst EpisodesList = () => {\r\n\r\n\tconst page = useSelector(state => state.episodes.page);\r\n\tconst episodes = useSelector(state => state.episodes.episodes);\r\n\tconst isFiltersUpdated = useSelector(state => state.episodes.filtersUpdated);\r\n\r\n\tconst name = useSelector(state => state.episodes.filter);\r\n\r\n\tconst {\r\n\t\tdata = {},\r\n\t\tisLoading,\r\n\t\tisFetching,\r\n\t\tisError\r\n\t} = useGetEpisodesQuery({ page, name });\r\n\tconst { results = [], info = {} } = data;\r\n\tconst pages = info.pages;\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isFiltersUpdated) {\r\n\t\t\tdispatch(clearEpisodes());\r\n\t\t\tdispatch(clearPage(1));\r\n\t\t\tdispatch(filtersUpdated(false));\r\n\t\t}\r\n\t\tif (\t\t\t\t\t// проверяем, есть ли в сторе элемент с таким же id,\r\n\t\t\t!(\t\t\t\t// как в данных, которые приходят с API\r\n\t\t\t\tepisodes.length \r\n\t\t\t\t&& episodes[episodes.length - 1]?.id === results[results.length - 1]?.id\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tdispatch(episodesUpdate(results));\r\n\t\t}\r\n\t}, [results]);\r\n\r\n\tconst renderEpisodes = (episodes) => {\r\n\t\treturn episodes.map(item => {\r\n\t\t\treturn <EpisodesItem\r\n\t\t\t\t\tname={item.name}\r\n\t\t\t\t\tdate={item.air_date}\r\n\t\t\t\t\tepisode={item.episode}\r\n\t\t\t\t\tid={item.id}\r\n\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t/>;\r\n\t\t});\r\n\t}\r\n\r\n\tconst loadMore = () => {\r\n\t\tdispatch(pageIncreased());\r\n\t}\r\n\r\n\tif (isLoading) return <Spinner />;\r\n\tif (isError) return <ErrorMessage />;\r\n\r\n\tconst elements = renderEpisodes(episodes);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='list'>\r\n\t\t\t\t{ elements }\r\n\t\t\t</div>\r\n\t\t\t<button className=\"btn\" onClick={loadMore} disabled={isFetching || page >= pages}>LOAD MORE</button>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default EpisodesList;"],"names":["_jsxs","_Fragment","children","_jsx","src","imgSrc","alt","className","props","name","date","episode","id","Link","to","concat","page","useSelector","state","episodes","isFiltersUpdated","filtersUpdated","filter","_useGetEpisodesQuery","useGetEpisodesQuery","_useGetEpisodesQuery$","data","isLoading","isFetching","isError","_data$results","results","_data$info","info","pages","dispatch","useDispatch","useEffect","_episodes","_results","clearEpisodes","clearPage","length","episodesUpdate","Spinner","ErrorMessage","elements","map","item","EpisodesItem","air_date","renderEpisodes","onClick","pageIncreased","disabled"],"sourceRoot":""}