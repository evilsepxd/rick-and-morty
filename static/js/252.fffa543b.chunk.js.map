{"version":3,"file":"static/js/252.fffa543b.chunk.js","mappings":"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","sources":["features/ErrorMessage/ErrorMessage.js","features/ListItems/LocationsItem.js","features/Lists/LocationsList/LocationsList.js"],"sourcesContent":["import imgSrc from '../../resources/img/error.gif';\r\n\r\nimport './errorMessage.scss';\r\n\r\nconst ErrorMessage = () => {\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<img src={imgSrc} alt=\"error\" className='error__img' />\r\n\t\t\t<div className=\"error__text\">Something went wrong...</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ErrorMessage;","import { Link } from 'react-router-dom';\r\n\r\nimport './listItem.scss';\r\nimport '../../style/title.scss';\r\n\r\nconst LocationsItem = (props) => {\r\n\tconst { name, type, id } = props;\r\n\r\n\treturn (\r\n\t\t<Link to={`/location/${id}`} className=\"list__item\">\r\n\t\t\t<div className=\"list__item-inner\">\r\n\t\t\t\t<h2 className=\"list__item-title title title_card\">{name}</h2>\r\n\t\t\t\t<div className=\"list__item-descr subtitle\">{type}</div>\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t);\r\n}\r\n\r\nexport default LocationsItem;","import LocationsItem from '../../ListItems/LocationsItem';\r\nimport Spinner from '../../Spinner/Spinner';\r\nimport ErrorMessage from '../../ErrorMessage/ErrorMessage';\r\n\r\nimport { useGetLocationsQuery } from '../../../api/apiSlice';\r\nimport {\r\n\tclearLocations,\r\n\tfiltersUpdated,\r\n\tlocationsUpdate,\r\n\tpageIncreased,\r\n\tclearPage\r\n} from './locationsSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n\r\nimport '../listStyle.scss';\r\nimport '../../../style/button.scss';\r\n\r\nconst LocationsList = () => {\r\n\r\n\tconst page = useSelector(state => state.locations.page);\r\n\tconst locations = useSelector(state => state.locations.locations);\r\n\tconst isFiltersUpdated = useSelector(state => state.locations.filtersUpdated);\r\n\r\n\tconst {\r\n\t\tname,\r\n\t\ttype,\r\n\t\tdimension\r\n\t} = useSelector(state => state.locations.filters);\r\n\r\n\tconst {\r\n\t\tdata = {},\r\n\t\tisLoading,\r\n\t\tisFetching,\r\n\t\tisError\r\n\t} = useGetLocationsQuery(\r\n\t\t{ page, name, type, dimension }\r\n\t);\r\n\tconst { results = [], info = {} } = data;\r\n\tconst pages = info.pages;\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isFiltersUpdated) {\r\n\t\t\tdispatch(clearLocations());\r\n\t\t\tdispatch(clearPage(1));\r\n\t\t\tdispatch(filtersUpdated(false));\r\n\t\t}\r\n\t\tif (\t\t\t\t\t// проверяем, есть ли в сторе элемент с таким же id,\r\n\t\t\t!(\t\t\t\t// как в данных, которые приходят с API\r\n\t\t\t\tlocations.length \r\n\t\t\t\t&& locations[locations.length - 1]?.id === results[results.length - 1]?.id\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tdispatch(locationsUpdate(results));\r\n\t\t}\r\n\t}, [results]);\r\n\r\n\tconst renderLocations = (locations) => {\r\n\t\treturn locations.map(item => {\r\n\t\t\treturn <LocationsItem\r\n\t\t\t\t\tname={item.name}\r\n\t\t\t\t\ttype={item.type}\r\n\t\t\t\t\tid={item.id}\r\n\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t/>;\r\n\t\t});\r\n\t}\r\n\r\n\tconst loadMore = () => {\r\n\t\tdispatch(pageIncreased())\r\n\t}\r\n\r\n\tif (isLoading) return <Spinner />;\r\n\tif (isError) return <ErrorMessage />;\r\n\r\n\tconst elements = renderLocations(locations);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='list'>\r\n\t\t\t\t{ elements }\r\n\t\t\t</div>\r\n\t\t\t<button className=\"btn\" onClick={loadMore} disabled={isFetching || page >= pages}>LOAD MORE</button>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default LocationsList;"],"names":["_jsxs","_Fragment","children","_jsx","src","imgSrc","alt","className","props","name","type","id","Link","to","concat","page","useSelector","state","locations","isFiltersUpdated","filtersUpdated","_useSelector","filters","dimension","_useGetLocationsQuery","useGetLocationsQuery","_useGetLocationsQuery2","data","isLoading","isFetching","isError","_data$results","results","_data$info","info","pages","dispatch","useDispatch","useEffect","_locations","_results","clearLocations","clearPage","length","locationsUpdate","Spinner","ErrorMessage","elements","map","item","LocationsItem","renderLocations","onClick","pageIncreased","disabled"],"sourceRoot":""}